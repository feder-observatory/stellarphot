[metadata]
name = stellarphot
# version should be PEP440 compatible (https://www.python.org/dev/peps/pep-0440/)
author = Matt Craig
author_email = mattwcraig@gmail.com
description = A package for performing stellar photometry.
long_description = This is a package for doing stellar photometry that relies on astropy.
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://github.com/stellarphot/stellarphot
edit_on_github = False
github_project = stellarphot/stellarphot

[options]
install_requires =
    astropy >=5
    astroquery
    ccdproc
    ginga
    ipywidgets
    bottleneck
    photutils >=1
    matplotlib
    pandas
    pyyaml
    astrowidgets
    ipyfilechooser
python_requires = >=3.7
setup_requires = setuptools_scm
zip_safe = False
use_2to3 = False
packages = find:

[options.extras_require]
exo_fitting =
    batman-package
test =
    pytest
    pytest-astropy
docs =
    sphinx
    sphinx-astropy

[options.package_data]
* = *.c
stellarphot = data/*
stellarphot.differential_photometry.tests = data/*
stellarphot.io.tests = data/*
stellarphot.io = *.yml
stellarphot.tests =
    coveragerc
    data/*
stellarphot.analysis = data/*
stellarphot.notebooks.photometry = *.ipynb

[tool:pytest]
minversion = 5.0
testpaths = "stellarphot" "docs"
astropy_header = true
norecursedirs = build docs/_build
doctest_plus = enabled
text_file_format = rst
addopts = -p no:warnings

[coverage:run]
source = stellarphot
omit =
   */_astropy_init*
   */conftest*
   */cython_version*
   */setup_package*
   */tests/*
   */version*
   */__init__.py

[coverage:report]
exclude_lines =
   # Have to re-enable the standard pragma
   pragma: no cover

   # Don't complain about packages we have installed
   except ImportError

   # Don't complain if tests don't hit assertions
   raise AssertionError
   raise NotImplementedError

   # Don't complain about script hooks
   def main\(.*\):

   # Ignore branches that don't pertain to this version of Python
   pragma: py{ignore_python_version}


[flake8]
# E101 - mix of tabs and spaces
# W191 - use of tabs
# W291 - trailing whitespace
# W292 - no newline at end of file
# W293 - trailing whitespace
# W391 - blank line at end of file
# E111 - 4 spaces per indentation level
# E112 - 4 spaces per indentation level
# E113 - 4 spaces per indentation level
# E901 - SyntaxError or IndentationError
# E902 - IOError
select = E101,W191,W291,W292,W293,W391,E111,E112,E113,E901,E902
exclude = extern,sphinx,*parsetab.py,conftest.py,docs/conf.py,setup.py

[pycodestyle]
# E101 - mix of tabs and spaces
# W191 - use of tabs
# W291 - trailing whitespace
# W292 - no newline at end of file
# W293 - trailing whitespace
# W391 - blank line at end of file
# E111 - 4 spaces per indentation level
# E112 - 4 spaces per indentation level
# E113 - 4 spaces per indentation level
# E901 - SyntaxError or IndentationError
# E902 - IOError
select = E101,W191,W291,W292,W293,W391,E111,E112,E113,E901,E902
exclude = extern,sphinx,*parsetab.py,conftest.py,docs/conf.py,setup.py
